name: Run CI
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  scale-out-runner:
    concurrency: main
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CICD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CICD }}
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_CICD }}
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: Check out runner-autoscaling action
        uses: actions/checkout@v2
        with:
          repository: gdcorp-actions/runner-autoscaling
          token: ${{ secrets.CI_TOKEN }}
          path: local-actions/runner-autoscaling
      - name: Scale out runner autoscaling group to 1
        uses: ./local-actions/runner-autoscaling
        with:
          labels: ec2ubuntu
          github-token: ${{ secrets.REPO_PAT }}
          time-to-live: '4 hour'
          needs-direct-connect: true
          runner-ami-id: /GoldenAMI/gd-ubuntu20.04/latest
  ci:
    needs: scale-out-runner
    runs-on: [ec2ubuntu]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CICD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CICD }}
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_CICD }}
          role-duration-seconds: 900
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.3.3
      - name: Docker login for Golden Containers ECR
        env:
          ECR_REGISTRY: 764525110978.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com
        run: |
          echo "Using: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.7
          architecture: 'x64'
      - name: Checkout Tartufo Repo
        uses: actions/checkout@v2
        with:
          repository: gdcorp-actions/tartufo
          token: ${{ secrets.CI_TOKEN }}
          path: .tartufo
          ref: main
          persist-credentials: false
      - name: Tartufo secret scanning using the Tartufo GitHub Action
        uses: ./.tartufo
        with:
            github_token: ${{ secrets.REPO_PAT }}